/* TODO: implement @tailwindcss https://tailwindcss.com/ */

:root {
  color-scheme: light dark;
  --background-color: #fff;
  --text-color: #000;
  --primary-color: #008000;
  --secondary-color: #e70000;
  --white-color: #fff;
  font-family: Roboto, 'Open Sans', sans-serif;
  scroll-behavior: smooth;
}

/* BEGIN - COLOR_SCHEME_VS_ON_COLOR_SCHEME_CHANGE_FUNC */
/* the `prefer-color-scheme` media feature detects the user's OS color scheme preference
and applies it if the selected app's color scheme is `Auto`.
 */
@media (prefers-color-scheme: light) {
  :root {
    --background-color: #f8f8f8;
    --text-color: #353535;
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    --background-color: #353535;
    --text-color: #f8f8f8;
  }
}

/* the custom `light` and `dark` CSS color schemes */
:root:has(option[value="lightCSS"]:checked) {
  color-scheme: light;
  --background-color: #fff;
  --text-color: #202020
}
:root:has(option[value="darkCSS"]:checked) {
  color-scheme: dark;
  --background-color: #202020;
  --text-color: #fff;
}

/* the custom `light` and `dark` JS color schemes */
:root:has(.color-scheme-js.lightJS) {
  color-scheme: light;
  --background-color: #fff;
  --text-color: #202020
}
:root:has(.color-scheme-js.darkJS) {
  color-scheme: dark;
  --background-color: #202020;
  --text-color: #fff;
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
}
/* END - COLOR_SCHEME_VS_ON_COLOR_SCHEME_CHANGE_FUNC */

.container {
  width: 342px;
  padding: 0 8px;
  margin: 0 auto;
  @media screen and (min-width: 600px) {
    width: 600px;
    padding: 0 24px;
  }
  @media screen and (min-width: 900px) {
    width: 700px;
  }
}

select {
  display: block;
  width: 70px;
  color: var(--text-color);
  background-color: var(--background-color);
  padding: 4px;
  margin-bottom: 4px
}

label:has(+ select) {
  display: inline-block;
  margin-bottom: 8px;
}

.title {
  margin-top: 54px;
  margin-bottom: 40px;
  .title-row {
    display: flex;
    justify-content: center;
    padding-bottom: 12px;
    &:first-child {
      gap: 10px;
      span:nth-of-type(1) {
        color: var(--primary-color);
      }
      span:nth-of-type(3) {
        color: var(--secondary-color);
      }
    }
    &:last-child {
      gap: 6px;
      font-size: 20px;
      letter-spacing: 0.5px;
    }
  }
}

.css-reference {
  padding-top: 16px;
  >h3 {
    padding-left: 24px;
    margin-bottom: 24px;
  }
  @media screen and (min-width: 600px) {
    padding-top: 40px;
    >h3 {
      padding-left: 48px;
      margin-bottom: 32px;
    }
  }
}

section {
  margin-bottom: 40px;
  border-radius: 12px;
  border: 1px solid lightgray;
  padding: 24px 24px 18px;
  @media screen and (min-width: 600px) {
    padding: 42px 48px 30px;
  }
}

section>h3 {
  font-weight: normal;
  margin-top: 0;
  margin-bottom: 30px;
  scroll-margin-top: 50px;
  @media screen and (min-width: 600px) {
    scroll-margin-top: 60px;
  }
  word-wrap: break-word;
  &:has(+ p) {
    margin-bottom: 0;
  }
  &::before {
    content: "â–¶";
    padding-right: 22px;
  }
}

section a {
  text-decoration: none;
  &:hover {
    text-decoration: none;
    &::before {
      content: "#";
      display: inline-block;
      line-height: 1;
      text-decoration: none;
      width: 16px;
      font-size: 16px;
      font-weight: 500;
      margin-left: -16px;
      color: var(--text-color);
    }
  }

  span {
    white-space: nowrap;
    &:first-child {
      color: var(--primary-color);
    }
    &:nth-child(2) {
      font-weight: bold;
      color: var(--text-color);
      padding-left: 12px;
      padding-right: 12px;
    }
    &:last-child {
      color: var(--secondary-color);
    }
  }
}

section > div {
  margin-bottom: 8px;
  &>div:first-child {
    margin-top: 8px;
    margin-bottom: 8px;
    display: inline-block;
    width: 20%;
    vertical-align: top;
    overflow-wrap: break-word;
  }

  &>div:last-child {
    display: inline-block;
    width: 80%;
    margin-top: 8px;
    margin-bottom: 8px;
  }
}

section .method-css-container {
  color: var(--primary-color);
  div:first-child > span:first-child {
    text-transform: uppercase;
  }
}

section .method-js-container {
  color: var(--secondary-color);
  div:first-child > span:first-child {
    text-transform: uppercase;
  }
}

section .note {
  font-size: 12px;
  margin-bottom: 30px;
}

.requirement-children > p {
  margin-top: 0;
  margin-bottom: 0;
}

.ol-inline-block {
  display: inline-block;
  padding-left: 18px;
  margin-top: 0;
  margin-bottom: 0;
  li {
    margin-top: 8px;
    margin-bottom: 8px;
    /* recommended instead of .only-child-css:only-child */
    //:only-child {
    //  font-weight: bold;
    //  list-style-type: disc;
    //}
  }
}

/* BEGIN - EXAMPLES */
/* TEXT_TRANSFORM_UPPERCASE_VS_STR_TO_UPPER_CASE_METH */
.text-uppercase-css {
  text-transform: uppercase;
}

/* TEXT_TRANSFORM_CAPITALIZE_VS_CAPITALIZE_STR_FUNC */
.text-transform-capitalize-css {
  text-transform: capitalize;
}

/* LAST_CHILD_PSEUDO_CLASS_VS_IS_LAST_CHILD_VAR */
.last-child-css {
  &::after {
    content: url("../public/arrow-right.jpeg");
    padding: 0 8px;
  }
  &:last-child::after {
    content: "";
    padding: 0;
  }
}
.last-child-js::after {
  content: url("../public/arrow-right.jpeg");
  padding: 0 8px;
}

/* NTH_OF_TYPE_EVEN_PSEUDO_CLASS_VS_IS_EVEN_VAR */
/* similar to nth-of-type(even) is nth-child(even) */
.nth-of-type-even-css:nth-of-type(even) {
  font-weight: bold;
  text-decoration: underline;
}
.nth-of-type-even-js {
  font-weight: bold;
  text-decoration: underline;
}

.ul-li-inline-block {
  display: inline-block;
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  li {
    display: inline-block;
    margin-top: 8px;
    margin-bottom: 8px;
  }
}

/* ONLY_CHILD_PSEUDO_CLASS_VS_IS_ONLY_CHILD_VAR */
.only-child-css:only-child {
  font-weight: bold;
  list-style-type: disc;
}
.only-child-js {
  font-weight: bold;
  list-style-type: disc;
}

/* FIRST_LETTER_PSEUDO_EL_VS_CAPITALIZE_FIRST_LETTER_FUNC */
.first-letter-css::first-letter {
  text-transform: uppercase;
}
/* END - EXAMPLES */
